// Code generated by MockGen. DO NOT EDIT.
// Source: task_scheduler.go

// Package mock_schedule is a generated GoMock package.
package mock_schedule

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocktraceManager is a mock of traceManager interface.
type MocktraceManager struct {
	ctrl     *gomock.Controller
	recorder *MocktraceManagerMockRecorder
}

// MocktraceManagerMockRecorder is the mock recorder for MocktraceManager.
type MocktraceManagerMockRecorder struct {
	mock *MocktraceManager
}

// NewMocktraceManager creates a new mock instance.
func NewMocktraceManager(ctrl *gomock.Controller) *MocktraceManager {
	mock := &MocktraceManager{ctrl: ctrl}
	mock.recorder = &MocktraceManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktraceManager) EXPECT() *MocktraceManagerMockRecorder {
	return m.recorder
}

// WithGeneratedTaskID mocks base method.
func (m *MocktraceManager) WithGeneratedTaskID(ctx context.Context) context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithGeneratedTaskID", ctx)
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// WithGeneratedTaskID indicates an expected call of WithGeneratedTaskID.
func (mr *MocktraceManagerMockRecorder) WithGeneratedTaskID(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithGeneratedTaskID", reflect.TypeOf((*MocktraceManager)(nil).WithGeneratedTaskID), ctx)
}

// WithGeneratedWorkerID mocks base method.
func (m *MocktraceManager) WithGeneratedWorkerID(ctx context.Context) context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithGeneratedWorkerID", ctx)
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// WithGeneratedWorkerID indicates an expected call of WithGeneratedWorkerID.
func (mr *MocktraceManagerMockRecorder) WithGeneratedWorkerID(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithGeneratedWorkerID", reflect.TypeOf((*MocktraceManager)(nil).WithGeneratedWorkerID), ctx)
}
