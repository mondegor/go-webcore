// Code generated by MockGen. DO NOT EDIT.
// Source: id_generator.go

// Package mock_mrcore is a generated GoMock package.
package mock_mrcore

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIdentifierGenerator is a mock of IdentifierGenerator interface.
type MockIdentifierGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIdentifierGeneratorMockRecorder
}

// MockIdentifierGeneratorMockRecorder is the mock recorder for MockIdentifierGenerator.
type MockIdentifierGeneratorMockRecorder struct {
	mock *MockIdentifierGenerator
}

// NewMockIdentifierGenerator creates a new mock instance.
func NewMockIdentifierGenerator(ctrl *gomock.Controller) *MockIdentifierGenerator {
	mock := &MockIdentifierGenerator{ctrl: ctrl}
	mock.recorder = &MockIdentifierGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentifierGenerator) EXPECT() *MockIdentifierGeneratorMockRecorder {
	return m.recorder
}

// GenID mocks base method.
func (m *MockIdentifierGenerator) GenID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenID indicates an expected call of GenID.
func (mr *MockIdentifierGeneratorMockRecorder) GenID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenID", reflect.TypeOf((*MockIdentifierGenerator)(nil).GenID))
}
